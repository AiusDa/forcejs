{"version":3,"sources":["webpack:///webpack/bootstrap 6b90c02d055290e57b1b","webpack:///./app.js","webpack:///./oauth-user-agent.js","webpack:///./force-service.js"],"names":["list","document","getElementById","idField","firstNameField","lastNameField","loginBtn","discardTokenBtn","isLoggedInBtn","queryBtn","newBtn","createBtn","updateBtn","deleteBtn","oauth","createInstance","console","log","service","errorHandler","alert","error","login","event","preventDefault","then","result","catch","query","innerHTML","str","contacts","response","records","i","length","Id","FirstName","LastName","create","value","update","del","retrieve","id","contact","style","display","discardToken","isLoggedIn","newContact","window","onhashchange","location","hash","substr","addEventListener","instanceCounter","context","pathname","substring","lastIndexOf","serverURL","protocol","hostname","port","baseURL","oauthPlugin","getQueryStringAsObject","obj","index","url","indexOf","queryString","decodeURIComponent","params","split","forEach","splitter","param","options","cordova","OAuthCordova","OAuthWeb","OAuth","appId","loginURL","oauthCallbackURL","instanceId","Promise","resolve","reject","require","getAuthCredentials","creds","accessToken","instanceURL","instanceUrl","refreshToken","detail","oauthResult","state","access_token","instance_url","refresh_token","loginWindowURL","open","joinPaths","path1","path2","charAt","toQueryString","parts","hasOwnProperty","push","encodeURIComponent","join","singleton","namedInstances","name","instance","ForceServiceCordova","ForceServiceWeb","getInstance","ForceService","apiVersion","useProxy","SfdcApp","sforce","proxyURL","slice","method","xhr","XMLHttpRequest","getRequestBaseURL","path","onreadystatechange","readyState","status","responseText","JSON","parse","undefined","refreshAccessToken","request","data","message","setRequestHeader","contentType","send","stringify","soql","q","objectName","fields","attributes","externalIdField","externalId","pathOrParams","basePath","res","authenticate"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6b90c02d055290e57b1b","//Import the force module\nimport OAuth from './oauth-user-agent';\nimport Service from './force-service';\n\nlet list = document.getElementById('contactList'),\n    idField = document.getElementById('contactId'),\n    firstNameField = document.getElementById('firstName'),\n    lastNameField = document.getElementById('lastName'),\n    loginBtn = document.getElementById('loginBtn'),\n    discardTokenBtn = document.getElementById('discardTokenBtn'),\n    isLoggedInBtn = document.getElementById('isLoggedInBtn'),\n    queryBtn = document.getElementById('queryBtn'),\n    newBtn = document.getElementById('newBtn'),\n    createBtn = document.getElementById('createBtn'),\n    updateBtn = document.getElementById('updateBtn'),\n    deleteBtn = document.getElementById('deleteBtn'),\n\n    oauth = OAuth.createInstance();\n\nconsole.log(\"oauth\");\nconsole.log(oauth);\n\n\n// ForceJS is built to work out of the box with sensible defaults.\n// Uncomment the service.init() function call below to provide specific runtime parameters\n//    service.init({\n//        appId: '3MVG9fMtCkV6eLheIEZplMqWfnGlf3Y.BcWdOf1qytXo9zxgbsrUbS.ExHTgUPJeb3jZeT8NYhc.hMyznKU92',\n//        apiVersion: 'v32.0',\n//        loginUrl: 'https://login.salesservice.com',\n//        oauthRedirectURL: 'http://localhost:8200/oauthcallback.html',\n//        proxyURL: 'http://localhost:8200'\n//    });\n\nlet service;\n\nlet errorHandler = error => {\n    alert(`An error has occurred`);\n    console.log(error);\n}\n\nlet login = event => {\n    event.preventDefault();\n    oauth.login()\n        .then(result => {\n            console.log(result);\n            service = Service.createInstance(result);\n            alert('Salesforce login succeeded')\n        })\n        .catch((error) => {\n            console.log(error);\n            alert('Salesforce login failed');\n        });\n};\n\nlet query = () => {\n\n    // Empty list\n    list.innerHTML = '';\n\n    // Retrieve contacts\n    service.query('select id, firstName, lastName from contact LIMIT 50')\n        .then(response => {\n            let str = '';\n            let contacts = response.records;\n            for (let i=0; i < contacts.length; i++) {\n                str += '<a href=\"#' + contacts[i].Id + '\" class=\"list-group-item\">' + contacts[i].FirstName + ' '\n                    + contacts[i].LastName + '</a>';\n            }\n            list.innerHTML = str;\n        })\n        .catch(errorHandler);\n}\n\nfunction create() {\n    service.create('contact', {FirstName: firstNameField.value, LastName: lastNameField.value})\n        .then(function(response) {\n            console.log(response);\n        })\n        .catch(errorHandler);\n}\n\nfunction update() {\n    service.update('contact', {Id: idField.value, FirstName: firstNameField.value, LastName: lastNameField.value})\n        .then(function(response) {\n            console.log(response);\n        })\n        .catch(errorHandler);\n}\n\nfunction del() {\n    service.del('contact', idField.value)\n        .then(function(response) {\n            console.log(response);\n        })\n        .catch(errorHandler);\n}\n\nfunction retrieve(id) {\n    service.retrieve('contact', id, null)\n        .then(function(contact) {\n            console.log(contact);\n            idField.value = contact.Id;\n            firstNameField.value = contact.FirstName;\n            lastNameField.value = contact.LastName;\n            createBtn.style.display = 'none';\n            updateBtn.style.display = 'inline';\n            deleteBtn.style.display = 'inline';\n\n        })\n        .catch(errorHandler);\n}\n\nfunction discardToken(event) {\n    event.preventDefault();\n    service.discardToken();\n    alert('Token discarded');\n}\n\nfunction isLoggedIn(event) {\n    event.preventDefault();\n    alert(service.isLoggedIn());\n}\n\nfunction newContact() {\n    idField.value = \"\";\n    firstNameField.value = \"\";\n    lastNameField.value = \"\";\n    createBtn.style.display = 'inline';\n    updateBtn.style.display = 'none';\n    deleteBtn.style.display = 'none';\n}\n\nwindow.onhashchange = function () {\n    let id = window.location.hash.substr(1);\n    retrieve(id);\n}\n\nloginBtn.addEventListener(\"click\", login);\ndiscardTokenBtn.addEventListener(\"click\", discardToken);\nisLoggedInBtn.addEventListener(\"click\", isLoggedIn);\nqueryBtn.addEventListener(\"click\", query);\nnewBtn.addEventListener(\"click\", newContact);\nupdateBtn.addEventListener(\"click\", update);\ncreateBtn.addEventListener(\"click\", create);\ndeleteBtn.addEventListener(\"click\", del);\n\n\n// WEBPACK FOOTER //\n// ./app.js","/**\n * ForceJS - REST toolkit for Salesforce.com\n * Author: Christophe Coenraets @ccoenraets\n * Version: 0.8.0\n */\n\"use strict\";\n\nlet instanceCounter = 0;\n\nlet // if page URL is http://localhost:3000/myapp/index.html, context is /myapp\n    context = window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\")),\n\n    // if page URL is http://localhost:3000/myapp/index.html, serverURL is http://localhost:3000\n    serverURL = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : ''),\n\n    // if page URL is http://localhost:3000/myapp/index.html, baseURL is http://localhost:3000/myapp\n    baseURL = serverURL + context,\n\n    // Reference to the Salesforce OAuth plugin\n    oauthPlugin;\n\nlet getQueryStringAsObject = url => {\n    let obj = {},\n        index = url.indexOf('#');\n    if (index > -1) {\n        let queryString = decodeURIComponent(url.substr(index + 1)),\n            params = queryString.split('&');\n        params.forEach(param => {\n            let splitter = param.split('=');\n            obj[splitter[0]] = splitter[1];\n        });\n    }\n    return obj;\n};\n\nexport default {\n    createInstance: (oauth, options) => {\n        return window.cordova ? new OAuthCordova(oauth, options) : new OAuthWeb(oauth, options);\n    }\n}\n\nclass OAuth {\n\n    constructor(appId, loginURL, oauthCallbackURL) {\n        instanceCounter = instanceCounter + 1;\n        this.instanceId = instanceCounter;\n        this.appId = appId || \"3MVG9fMtCkV6eLheIEZplMqWfnGlf3Y.BcWdOf1qytXo9zxgbsrUbS.ExHTgUPJeb3jZeT8NYhc.hMyznKU92\";\n        this.loginURL = loginURL || \"https://login.salesforce.com\";\n        this.oauthCallbackURL = oauthCallbackURL || baseURL + '/oauthcallback.html';\n    }\n\n    login() {\n    }\n\n}\n\nclass OAuthCordova extends OAuth{\n\n    login() {\n        return new Promise((resolve, reject) => {\n            document.addEventListener(\"deviceready\", () => {\n                oauthPlugin = cordova.require(\"com.salesforce.plugin.oauth\");\n                if (!oauthPlugin) {\n                    console.error('Salesforce Mobile SDK OAuth plugin not available');\n                    reject('Salesforce Mobile SDK OAuth plugin not available');\n                    return;\n                }\n                oauthPlugin.getAuthCredentials(\n                    function (creds) {\n                        resolve({\n                            accessToken: creds.accessToken,\n                            instanceURL: creds.instanceUrl,\n                            refreshToken: creds.refreshToken\n                        });\n                    },\n                    function (error) {\n                        console.log(error);\n                        reject(error);\n                    }\n                );\n            }, false);\n        });\n    }\n\n}\n\nclass OAuthWeb extends OAuth {\n\n    login() {\n        return new Promise((resolve, reject) => {\n\n            console.log('loginURL: ' + this.loginURL);\n            console.log('oauthCallbackURL: ' + this.oauthCallbackURL);\n\n            document.addEventListener(\"oauthCallback\", (event) => {\n\n                let url = event.detail,\n                    oauthResult = getQueryStringAsObject(url);\n\n                if (oauthResult.state == this.instanceId) {\n\n                    if (oauthResult.access_token) {\n                        resolve({\n                            accessToken: oauthResult.access_token,\n                            instanceURL: oauthResult.instance_url,\n                            refreshToken: oauthResult.refresh_token\n                        });\n                    } else {\n                        reject(oauthResult);\n                    }\n                }\n\n            });\n\n            let loginWindowURL = this.loginURL + `/services/oauth2/authorize?client_id=${this.appId}&redirect_uri=${this.oauthCallbackURL}&response_type=token&state=${this.instanceId}`;\n            window.open(loginWindowURL, '_blank', 'location=no');\n\n        });\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./oauth-user-agent.js","/**\n * ForceJS - REST toolkit for Salesforce.com\n * Author: Christophe Coenraets @ccoenraets\n * Version: 0.8.0\n */\n\"use strict\";\n\n// if page URL is http://localhost:3000/myapp/index.html, context is /myapp\nlet context = window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\"));\n\n// if page URL is http://localhost:3000/myapp/index.html, serverURL is http://localhost:3000\nlet serverURL = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n\n// if page URL is http://localhost:3000/myapp/index.html, baseURL is http://localhost:3000/myapp\nlet baseURL = serverURL + context;\n\nlet joinPaths = (path1, path2) => {\n    if (path1.charAt(path1.length - 1) !== '/') path1 = path1 + \"/\";\n    if (path2.charAt(0) === '/') path2 = path2.substr(1);\n    return path1 + path2;\n};\n\nlet toQueryString = obj => {\n    let parts = [],\n        i;\n    for (i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            parts.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(obj[i]));\n        }\n    }\n    return parts.join(\"&\");\n};\n\n// Keeps track of single instance when instance is created with singleton form of createInstance:\n// createInstance(oauth, options) with no third parameter (name of the instance)\nlet singleton;\n\n// Keeps track of named instances when app needs data from multiple Salesforce orgs. For example:\n// let org1 = ForceService.createInstance(oauth, options, \"org1\");\n// let org2 = ForceService.createInstance(oauth, options, \"org2\");\nlet namedInstances = {};\n\nexport default {\n\n    createInstance: (oauth, options, name) => {\n        let instance;\n        if (window.cordova) {\n            instance = new ForceServiceCordova(oauth, options);\n        } else {\n            instance =  new ForceServiceWeb(oauth, options);\n        }\n        if (name) {\n            namedInstances[name] = instance;\n        } else {\n            singleton = instance;\n        }\n        return instance;\n    },\n\n    getInstance: name => {\n        return name ? namedInstances[name] : singleton;\n    }\n\n}\n\nclass ForceService {\n\n    constructor(oauth = {}, options = {}) {\n\n        this.accessToken = oauth.accessToken;\n        this.instanceURL = oauth.instanceURL;\n        this.refreshToken = oauth.refreshToken;\n\n        this.apiVersion = options.apiVersion || 'v36.0';\n        this.loginURL = options.loginURL || \"https://login.salesforce.com\";\n\n        // Whether or not to use a CORS proxy. Defaults to false if app running in Cordova, in a VF page,\n        // or using the Salesforce console. Can be overriden in init()\n        this.useProxy = options.useProxy || (window.cordova || window.SfdcApp || window.sforce) ? false : true;\n\n        // Only required when using REST APIs in an app hosted on your own server to avoid cross domain policy issues\n        // To override default, pass proxyURL in init(props)\n        this.proxyURL = options.proxyURL || baseURL;\n    }\n\n    /*\n     * Determines the request base URL.\n     */\n    getRequestBaseURL() {\n\n        let url;\n\n        if (this.useProxy) {\n            url = this.proxyURL;\n        } else if (this.instanceURL) {\n            url = this.instanceURL;\n        } else {\n            url = serverURL;\n        }\n\n        // dev friendly API: Remove trailing '/' if any so url + path concat always works\n        if (url.slice(-1) === '/') {\n            url = url.slice(0, -1);\n        }\n\n        return url;\n    }\n\n    refreshAccessToken() {\n    };\n\n    /**\n     * Lets you make any Salesforce REST API request.\n     * @param obj - Request configuration object. Can include:\n     *  method:  HTTP method: GET, POST, etc. Optional - Default is 'GET'\n     *  path:    path in to the Salesforce endpoint - Required\n     *  params:  queryString parameters as a map - Optional\n     *  data:  JSON object to send in the request body - Optional\n     */\n    request(obj) {\n        return new Promise((resolve, reject) => {\n\n            if (!this.accessToken) {\n                reject('No access token. Please login and try again.');\n                return;\n            }\n\n            let method = obj.method || 'GET',\n                xhr = new XMLHttpRequest(),\n                url = this.getRequestBaseURL();\n\n            // dev friendly API: Add leading '/' if missing so url + path concat always works\n            if (obj.path.charAt(0) !== '/') {\n                obj.path = '/' + obj.path;\n            }\n\n            url = url + obj.path;\n\n            if (obj.params) {\n                url += '?' + toQueryString(obj.params);\n            }\n\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status > 199 && xhr.status < 300) {\n                        resolve(xhr.responseText ? JSON.parse(xhr.responseText) : undefined);\n                    } else if (xhr.status === 401) {\n                        if (this.refreshToken) {\n                            refreshAccessToken()\n                            // Try again with the new token\n                                .then(() => this.request(obj).then(data => resolve(data)).catch(error => reject(error)))\n                                .catch(() => {\n                                    console.error(xhr.responseText);\n                                    let error = xhr.responseText ? JSON.parse(xhr.responseText) : {message: 'Server error while refreshing token'};\n                                    reject(error);\n                                });\n                        } else {\n                            reject(\"Invalid or expired token\");\n                        }\n                    } else {\n                        let error = xhr.responseText ? JSON.parse(xhr.responseText) : {message: 'Server error while executing request'};\n                        reject(error);\n                    }\n                }\n            };\n\n            xhr.open(method, url, true);\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.accessToken);\n            if (obj.contentType) {\n                xhr.setRequestHeader(\"Content-Type\", obj.contentType);\n            }\n            if (this.useProxy) {\n                xhr.setRequestHeader(\"Target-URL\", this.instanceURL);\n            }\n            xhr.send(obj.data ? JSON.stringify(obj.data) : undefined);\n\n        });\n    }\n\n    /**\n     * Convenience function to execute a SOQL query\n     * @param soql\n     */\n    query(soql) {\n        return this.request({\n            path: '/services/data/' + this.apiVersion + '/query',\n            params: {q: soql}\n        })\n    }\n\n    /**\n     * Convenience function to retrieve a single record based on its Id\n     * @param objectName\n     * @param id\n     * @param fields\n     */\n    retrieve(objectName, id, fields) {\n        return this.request({\n                path: '/services/data/' + this.apiVersion + '/sobjects/' + objectName + '/' + id,\n                params: fields ? {fields: fields} : undefined\n            }\n        );\n    }\n\n    /**\n     * Convenience function to retrieve picklist values from a SalesForce Field\n     * @param objectName\n     */\n    getPickListValues(objectName) {\n        return this.request({\n                path: '/services/data/' + this.apiVersion + '/sobjects/' + objectName + '/describe'\n            }\n        );\n    }\n\n    /**\n     * Convenience function to create a new record\n     * @param objectName\n     * @param data\n     */\n    create(objectName, data) {\n        return this.request({\n            method: 'POST',\n            contentType: 'application/json',\n            path: '/services/data/' + this.apiVersion + '/sobjects/' + objectName + '/',\n            data: data\n        });\n    }\n\n    /**\n     * Convenience function to update a record. You can either pass the sobject returned by retrieve or query or a simple JavaScript object.\n     * @param objectName\n     * @param data The object to update. Must include the Id field.\n     */\n    update(objectName, data) {\n\n        let id = data.Id || data.id,\n            fields = JSON.parse(JSON.stringify(data));\n\n        delete fields.attributes;\n        delete fields.Id;\n        delete fields.id;\n\n        return this.request({\n                method: 'POST',\n                contentType: 'application/json',\n                path: '/services/data/' + this.apiVersion + '/sobjects/' + objectName + '/' + id,\n                params: {'_HttpMethod': 'PATCH'},\n                data: fields\n            }\n        );\n    };\n\n    /**\n     * Convenience function to delete a record\n     * @param objectName\n     * @param id\n     */\n    del(objectName, id) {\n        return this.request({\n                method: 'DELETE',\n                path: '/services/data/' + this.apiVersion + '/sobjects/' + objectName + '/' + id\n            }\n        );\n    }\n\n    /**\n     * Convenience function to upsert a record\n     * @param objectName\n     * @param externalIdField\n     * @param externalId\n     * @param data\n     */\n    upsert(objectName, externalIdField, externalId, data) {\n        return this.request({\n                method: 'PATCH',\n                contentType: 'application/json',\n                path: '/services/data/' + this.apiVersion + '/sobjects/' + objectName + '/' + externalIdField + '/' + externalId,\n                data: data\n            }\n        );\n    }\n\n    /**\n     * Convenience function to invoke APEX REST endpoints\n     * @param pathOrParams\n     */\n    apexrest(pathOrParams) {\n\n        let params;\n\n        if (pathOrParams.substring) {\n            params = {path: pathOrParams};\n        } else {\n            params = pathOrParams;\n\n            if (params.path.charAt(0) !== \"/\") {\n                params.path = \"/\" + params.path;\n            }\n\n            if (params.path.substr(0, 18) !== \"/services/apexrest\") {\n                params.path = \"/services/apexrest\" + params.path;\n            }\n        }\n\n        return this.request(params);\n    };\n\n    /**\n     * Convenience function to invoke the Chatter API\n     * @param pathOrParams\n     */\n    chatter(pathOrParams) {\n\n        let basePath = \"/services/data/\" + this.apiVersion + \"/chatter\";\n        let params;\n\n        if (pathOrParams && pathOrParams.substring) {\n            params = {path: joinPaths(basePath, pathOrParams)};\n        } else if (pathOrParams && pathOrParams.path) {\n            params = pathOrParams;\n            params.path = joinPaths(basePath, pathOrParams.path);\n        } else {\n            return new Promise((resolve, reject) => reject(\"You must specify a path for the request\"));\n        }\n\n        return this.request(params);\n\n    }\n\n}\n\nclass ForceServiceWeb extends ForceService {\n\n    refreshAccessToken() {\n        return new Promise((resolve, reject) => {\n\n            if (!this.refreshToken) {\n                console.log('ERROR: refresh token does not exist');\n                reject();\n                return;\n            }\n\n            let xhr = new XMLHttpRequest(),\n\n                params = {\n                    'grant_type': 'refresh_token',\n                    'refresh_token': oauth.refresh_token,\n                    'client_id': appId\n                },\n\n                url = this.useProxy ? this.proxyURL : this.loginURL;\n\n            url = url + '/services/oauth2/token?' + toQueryString(params);\n\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        console.log('Token refreshed');\n                        let res = JSON.parse(xhr.responseText);\n                        this.accessToken = res.access_token;\n                        resolve();\n                    } else {\n                        console.log('Error while trying to refresh token: ' + xhr.responseText);\n                        reject();\n                    }\n                }\n            };\n\n            xhr.open('POST', url, true);\n            if (!this.useProxy) {\n                xhr.setRequestHeader(\"Target-URL\", this.loginURL);\n            }\n            xhr.send();\n\n        });\n    }\n\n}\n\nclass ForceServiceCordova extends ForceService {\n\n    refreshAccessToken() {\n        return new Promise((resolve, reject) => {\n            document.addEventListener(\"deviceready\", () => {\n                let oauthPlugin = cordova.require(\"com.salesforce.plugin.oauth\");\n                if (!oauthPlugin) {\n                    console.error('Salesforce Mobile SDK OAuth plugin not available');\n                    reject('Salesforce Mobile SDK OAuth plugin not available');\n                    return;\n                }\n                oauthPlugin.authenticate(\n                    function (response) {\n                        this.accessToken = response.accessToken;\n                        resolve();\n                    },\n                    function () {\n                        console.error('Error refreshing oauth access token using the oauth plugin');\n                        reject();\n                    }\n                );\n            }, false);\n        });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./force-service.js"],"sourceRoot":""}